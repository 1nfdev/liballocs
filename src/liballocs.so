/* HACK */
OUTPUT_FORMAT(elf64-x86-64)
GROUP ( liballocs_dummyweaks.so liballocs_nonshared.a )

/* Our basic recipe is as follows. 
 * NOTE: this should really be done for every defined allocator, 
 * not just the malloc family, and be done by allocscc rather
 * than here in -lallocs. */
 
/* Override: the public-facing malloc really must be the callee-instrumented version,
 * but only if malloc is defined locally and not in a shared lib (DEFINED tests this for
 * us). If it's not defined, we emit a reference to "malloc", which will bind to
 * __wrap_malloc as usual. 
 * It's not sound to unconditionally define malloc to be __wrap___real_malloc, because
 * if we do that, clients linking against shared libc malloc will have

          callq __real_malloc       (in the allocstubs.o file)
    turning into
          callq __wrap_malloc       (in the corresponding bit of the linked binary)
    after linking with --wrap malloc. Why?
     - we PROVIDE    __wrap___real_malloc = (reference to) malloc
        ... which will become        __wrap_malloc
     - we define     malloc =               (reference to) __wrap___real_malloc
     - --wrap means "for refs to __real_malloc, bind instead to malloc"
             i.e. to __wrap___real_malloc
             i.e. to __wrap_malloc
     - so malloc is defined by reference to __wrap___real_malloc, 
              which is defined by reference to malloc,
                so is rendered as a reference to __wrap_malloc.
    
    In the "executable case" we actually have definitions of
       __real_malloc (thanks to our objcopying)
       and
       __wrap___real_malloc (thanks to nonshared_hook_wrappers.c)
       in the link, so the PROVIDE things have no effect.
    
    
    GAH. The real fix is to move all this logic into allocscc.
    For any defined allocator function `malloc', we append
          -Wl,--defsym,malloc=__wrap___real_malloc
          -Wl,--wrap,__real_malloc
          
          i.e. to link in the callee-side instrumentation
 */
/* EXTERN(__real_malloc) */
/*
PROVIDE(malloc = __real_malloc);
PROVIDE(__wrap___real_malloc = DEFINED(__real_malloc) ? malloc : 0);
malloc = DEFINED(__real_malloc) ? __wrap___real_malloc : malloc;
PROVIDE(__wrap___real_calloc = DEFINED(__real_calloc) ? calloc : 0);
calloc = DEFINED(__real_calloc) ? __wrap___real_calloc : calloc ;
PROVIDE(__wrap___real_free = DEFINED(__real_free) ? free : 0);
free = DEFINED(__real_free) ? __wrap___real_free : free ;
PROVIDE(__wrap___real_realloc = DEFINED(__real_realloc) ? realloc : 0);
realloc = DEFINED(__real_realloc) ? __wrap___real_realloc : realloc;
PROVIDE(__wrap___real_memalign = DEFINED(__real_memalign) ? memalign : 0);
memalign = DEFINED(__real_memalign) ? __wrap___real_memalign : memalign;
*/
